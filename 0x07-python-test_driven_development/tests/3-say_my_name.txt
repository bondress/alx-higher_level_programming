The ``3-say_my_name`` module
============================

This module defines the function ``say_my_name(first_name, last_name="")``.

Usage
=====

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Laide", "Endeley")
    My name is Laide Endeley

::

    >>> say_my_name("Mary Jane", "Olsen")
    My name is Mary Jane Olsen

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Laide")
    My name is Laide 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(5, "Jean")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Crawley", ["Denver", "Ernest", "Fall"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Gorilla": 2, "Kanye": 44}, 9.2)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
